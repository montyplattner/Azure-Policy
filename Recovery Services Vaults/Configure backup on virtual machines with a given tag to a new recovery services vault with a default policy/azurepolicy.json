{
    "properties": {
      "displayName": "Configure backup on virtual machines without a given tag to a new recovery services vault with a default policy",
      "policyType": "Custom",
      "mode": "Indexed",
      "description": "Enforce backup for all virtual machines by deploying a recovery services vault in the same location and resource group as the virtual machine. Doing this is useful when different application teams in your organization are allocated separate resource groups and need to manage their own backups and restores. You can optionally exclude virtual machines containing a specified tag to control the scope of assignment. See https://aka.ms/AzureVMAppCentricBackupExcludeTag.",
      "metadata": {
        "version": "1.0.0",
        "category": "Backup"
      },
      "parameters": {
        "exclusionTagName": {
          "type": "String",
          "metadata": {
            "displayName": "Exclusion Tag Name",
            "description": "Name of the tag to use for excluding VMs from the scope of this policy. This should be used along with the Exclusion Tag Value parameter. Learn more at https://aka.ms/AppCentricVMBackupPolicy."
          },
          "defaultValue": ""
        },
        "exclusionTagValue": {
          "type": "Array",
          "metadata": {
            "displayName": "Exclusion Tag Values",
            "description": "Value of the tag to use for excluding VMs from the scope of this policy (in case of multiple values, use a comma-separated list). This should be used along with the Exclusion Tag Name parameter. Learn more at https://aka.ms/AppCentricVMBackupPolicy."
          },
          "defaultValue": []
        },
        "effect": {
          "type": "String",
          "metadata": {
            "displayName": "Effect",
            "description": "Enable or disable the execution of the policy"
          },
          "allowedValues": [
            "auditIfNotExists",
            "AuditIfNotExists",
            "deployIfNotExists",
            "DeployIfNotExists",
            "disabled",
            "Disabled"
          ],
          "defaultValue": "DeployIfNotExists"
        }
      },
      "policyRule": {
        "if": {
          "allOf": [
            {
              "field": "type",
              "equals": "Microsoft.Compute/virtualMachines"
            },
            {
              "not": {
                "field": "[concat('tags[', parameters('exclusionTagName'), ']')]",
                "in": "[parameters('exclusionTagValue')]"
              }
            },
            {
              "field": "id",
              "notContains": "/resourceGroups/databricks-rg-"
            },
            {
              "field": "Microsoft.Compute/imagePublisher",
              "notEquals": "azureopenshift"
            },
            {
              "field": "Microsoft.Compute/imagePublisher",
              "notEquals": "AzureDatabricks"
            }
          ]
        },
        "then": {
          "effect": "[parameters('effect')]",
          "details": {
            "type": "Microsoft.RecoveryServices/backupprotecteditems",
            "roleDefinitionIds": [
              "/providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
              "/providers/Microsoft.Authorization/roleDefinitions/5e467623-bb1f-42f4-a55d-6e525e11384b"
            ],
            "deployment": {
              "properties": {
                "mode": "incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "vmName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of Azure Virtual Machines"
                      }
                    },
                    "vmRgName": {
                      "type": "string",
                      "metadata": {
                        "description": "Resource group containing the virtual machines."
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Location for VM and Backup vault"
                      }
                    }
                  },
                  "variables": {
                    "backupFabric": "Azure",
                    "backupPolicy": "DefaultPolicy",
                    "v2VmType": "Microsoft.Compute/virtualMachines",
                    "v2VmContainer": "iaasvmcontainer;iaasvmcontainerv2;",
                    "v2Vm": "vm;iaasvmcontainerv2;",
                    "vaultName": "[take(concat('rsv', '-', replace(resourceGroup().name, '-', ''), '-', parameters('location'), '-', guid(resourceGroup().id)), 50)]"
                  },
                  "resources": [
                    {
                      "name": "[variables('vaultName')]",
                      "type": "Microsoft.RecoveryServices/vaults",
                      "apiVersion": "2016-06-01",
                      "location": "[parameters('location')]",
                      "properties": {},
                      "sku": {
                        "name": "Standard"
                      }
                    },
                    {
                      "name": "[concat(variables('vaultName'), '/', variables('backupFabric'), '/', variables('v2VmContainer'), concat(parameters('vmRgName'),';',parameters('vmName')), '/', variables('v2Vm'), concat(parameters('vmRgName'),';',parameters('vmName')))]",
                      "apiVersion": "2016-12-01",
                      "location": "[parameters('location')]",
                      "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
                      "dependsOn": [
                        "[resourceId('Microsoft.RecoveryServices/vaults/', variables('vaultName'))]"
                      ],
                      "properties": {
                        "protectedItemType": "[variables('v2VmType')]",
                        "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', variables('vaultName'),variables('backupPolicy'))]",
                        "sourceResourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('vmRgName'), '/providers/Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
                      }
                    }
                  ],
                  "outputs": {
                    "status": {
                      "type": "string",
                      "value": "[concat('Backup enabled successfully for VM:', ' ', parameters('vmName'), 'Backup Vault: ', variables('vaultName'))]"
                    }
                  }
                },
                "parameters": {
                  "vmName": {
                    "value": "[field('name')]"
                  },
                  "location": {
                    "value": "[field('location')]"
                  },
                  "vmRgName": {
                    "value": "[resourceGroup().name]"
                  }
                }
              }
            }
          }
        }
      }
    }
  }